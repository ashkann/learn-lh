(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_karg$36$VV$35$$35$906$35$$35$k_$35$$35$907 () Int)
(declare-fun papp5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 () Bool)
(declare-fun lq_tmp$36$x$35$$35$1208 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805129$35$$35$d2ZX () Int)
(declare-fun addrLen () Int)
(declare-fun lq_tmp$36$x$35$$35$672 () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 () Int)
(declare-fun v$35$$35$a2sr () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1119 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t () Bool)
(declare-fun i$35$$35$a2sF () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ$35$$35$k_$35$$35$1253 () Int)
(declare-fun x_Tuple55 () Int)
(declare-fun vs$35$$35$a2sj () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun n$35$$35$a2sA () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1611 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c () Bool)
(declare-fun Data.Primitive.Array.Array () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun x_Tuple63 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805100$35$$35$d2Zu () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO$35$$35$k_$35$$35$1253 () Str)
(declare-fun GHC.Types.False () Bool)
(declare-fun VV$35$$35$F$35$$35$51 () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1611 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y () Int)
(declare-fun Data.Vector.map () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805137$35$$35$d305 () Int)
(declare-fun x_Tuple64 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805132$35$$35$d300 () Int)
(declare-fun Data.Vector.length () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805136$35$$35$d304 () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805133$35$$35$d301 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz () Int)
(declare-fun lq_tmp$36$x$35$$35$1723 () Int)
(declare-fun lq_tmp$36$x$35$$35$1493 () Int)
(declare-fun autolen () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1611 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$1161 () Int)
(declare-fun Tutorial_04_Polymorphism.safeLookup () Int)
(declare-fun i$35$$35$a2sq () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM$35$$35$k_$35$$35$1253 () Str)
(declare-fun go$35$$35$a2sC () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1385 () Int)
(declare-fun GHC.Err.undefined () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 () Int)
(declare-fun papp2 () Int)
(declare-fun Data.Vector.$36$WVector () Int)
(declare-fun i$35$$35$a2sz () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805171$35$$35$d30D () Int)
(declare-fun lit$36$javascript () Str)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p () Bool)
(declare-fun GHC.List.reverse () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU () Int)
(declare-fun Data.Vector.Mutable.$36$WMVector () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805173$35$$35$d30F () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun papp7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805135$35$$35$d303$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805134$35$$35$d302$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805147$35$$35$d30f () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s () Bool)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun go$35$$35$a2uO () Int)
(declare-fun x_Tuple53 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun sz$35$$35$a2sx () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1263 () Int)
(declare-fun VV$35$$35$F$35$$35$61 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN () Str)
(declare-fun lq_karg$36$VV$35$$35$1612$35$$35$k_$35$$35$1613 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805129$35$$35$d2ZX$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 () Int)
(declare-fun GHC.List.last () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1385 () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$1252$35$$35$k_$35$$35$1253 () Bool)
(declare-fun acc$35$$35$a2sE () Int)
(declare-fun lq_karg$36$VV$35$$35$1610$35$$35$k_$35$$35$1611 () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun go$35$$35$a2sw () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x () Int)
(declare-fun lq_tmp$36$x$35$$35$1155 () Int)
(declare-fun lit$36$undefined () Str)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1613 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Bool)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_tmp$36$x$35$$35$1120 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun Data.Vector.unsafeIndex () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 () Bool)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY$35$$35$k_$35$$35$1253 () Int)
(declare-fun i$35$$35$a2st () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun Data.Vector.fromList () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun lq_tmp$36$x$35$$35$733 () Int)
(declare-fun acc$35$$35$a2sy () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun lit$36$Tutorial_04_Polymorphism () Str)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1387 () Int)
(declare-fun Data.Vector.Vector () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1369 () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805140$35$$35$d308 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA () Int)
(declare-fun papp1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 () Bool)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun x_Tuple51 () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e () Int)
(declare-fun x$35$$35$a2ss () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE () Int)
(declare-fun lq_tmp$36$x$35$$35$646 () Int)
(declare-fun Tutorial_04_Polymorphism.unsafeLookup () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805153$35$$35$d30l () Int)
(declare-fun x_Tuple54 () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1387 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ$35$$35$k_$35$$35$1253 () Str)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU$35$$35$k_$35$$35$1253 () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_tmp$36$x$35$$35$1118 () Int)
(declare-fun lq_tmp$36$x$35$$35$1264 () Int)
(declare-fun VV$35$$35$F$35$$35$66 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805134$35$$35$d302 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN$35$$35$k_$35$$35$1253 () Str)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR () Str)
(declare-fun x_Tuple21 () Int)
(declare-fun VV$35$$35$F$35$$35$57 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun Tutorial_04_Polymorphism.abs$39$ () Int)
(declare-fun x_Tuple65 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV () Int)
(declare-fun lq_karg$36$lo$35$$35$a2so$35$$35$k_$35$$35$1253 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun Tutorial_04_Polymorphism.isEmpty () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1613 () Int)
(declare-fun hi$35$$35$a2sn () Int)
(declare-fun lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805097$35$$35$d2Zr () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1385 () Int)
(declare-fun lq_tmp$36$x$35$$35$782 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun x_Tuple41 () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805095$35$$35$d2Zp () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 () Bool)
(declare-fun lq_tmp$36$x$35$$35$683 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$41$ () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun papp4 () Int)
(declare-fun x$35$$35$a2sm () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun sz$35$$35$a2sD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL () Str)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805154$35$$35$d30m () Int)
(declare-fun x$35$$35$a2sp () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q () Int)
(declare-fun lq_tmp$36$x$35$$35$1262 () Int)
(declare-fun lq_karg$36$x$35$$35$a2sp$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun x_Tuple52 () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI () Int)
(declare-fun x_Tuple62 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$907 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$41$ () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805138$35$$35$d306 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun Tutorial_04_Polymorphism.vectorSum () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR$35$$35$k_$35$$35$1253 () Str)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP$35$$35$k_$35$$35$1253 () Str)
(declare-fun lq_karg$36$VV$35$$35$1366$35$$35$k_$35$$35$1367 () Int)
(declare-fun lq_karg$36$VV$35$$35$1384$35$$35$k_$35$$35$1385 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT$35$$35$k_$35$$35$1253 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1613 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lit$36$learn$45$lh$45$0.1.0.0$45$1Du4197TG85LOPw555A0RD () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805094$35$$35$d2Zo () Str)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_karg$36$VV$35$$35$1386$35$$35$k_$35$$35$1387 () Int)
(declare-fun lq_karg$36$VV$35$$35$1368$35$$35$k_$35$$35$1369 () Int)
(declare-fun Data.Vector.imap () Int)
(declare-fun lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 () Int)
(declare-fun lo$35$$35$a2so () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx () Int)
(declare-fun Tutorial_04_Polymorphism.head$39$ () Int)
(declare-fun len () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun papp6 () Int)
(declare-fun lq_tmp$36$x$35$$35$635 () Int)
(declare-fun fix$36$$36$dIP_a2vD () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun lq_karg$36$hi$35$$35$a2sn$35$$35$k_$35$$35$1253 () Int)
(declare-fun Tutorial_04_Polymorphism.absoluteSum () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805093$35$$35$d2Zn () Str)
(declare-fun vec$35$$35$a2sB () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805099$35$$35$d2Zt () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW () Int)
(declare-fun v$35$$35$a2sl () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS$35$$35$k_$35$$35$1253 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r () Int)
(declare-fun lq_tmp$36$x$35$$35$603 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805132$35$$35$d300$35$$35$k_$35$$35$1253 () Int)
(declare-fun Data.Vector.Mutable.MVector () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u () Int)
(declare-fun lq_tmp$36$x$35$$35$727 () Int)
(declare-fun lq_tmp$36$x$35$$35$1344 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805136$35$$35$d304$35$$35$k_$35$$35$1253 () Int)
(declare-fun VV$35$$35$F$35$$35$65 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805133$35$$35$d301$35$$35$k_$35$$35$1253 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun v$35$$35$a2sk () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL$35$$35$k_$35$$35$1253 () Str)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1613 () Int)
(declare-fun lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1387 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805096$35$$35$d2Zq () Str)
(declare-fun cast_as () Int)
(declare-fun lit$36$src$47$Tutorial_04_Polymorphism.hs () Str)
(declare-fun lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 () Int)
(declare-fun Data.Vector.replicate () Int)
(declare-fun x_Tuple61 () Int)
(declare-fun VV$35$$35$F$35$$35$68 () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1253 () Int)
(declare-fun Tutorial_04_Polymorphism.twoLangs () Int)
(declare-fun Data.Vector.$33$ () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1613 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 () Int)
(declare-fun Tutorial_04_Polymorphism.isBetween () Int)
(declare-fun Tutorial_04_Polymorphism.head$39$$39$ () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 () Bool)
(declare-fun lq_tmp$36$x$35$$35$738 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK$35$$35$k_$35$$35$1253 () Str)
(declare-fun GHC.Real.recip () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1609 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1611 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_tmp$36$x$35$$35$678 () Int)
(declare-fun lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun vec$35$$35$a2sv () Int)
(declare-fun lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1367 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805175$35$$35$d30H () Int)
(declare-fun vlen () Int)
(declare-fun Tutorial_04_Polymorphism.nonEmpty () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Classes.$36$fEqInt () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1387 () Int)
(declare-fun lit$36$haskell () Str)
(declare-fun go$35$$35$a2u7 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_tmp$36$x$35$$35$776 () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$haskell lit$36$src$47$Tutorial_04_Polymorphism.hs lit$36$learn$45$lh$45$0.1.0.0$45$1Du4197TG85LOPw555A0RD lit$36$Tutorial_04_Polymorphism lit$36$undefined lit$36$javascript))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))
(assert (= (strLen lit$36$javascript) 10))
(assert (= (strLen lit$36$undefined) 9))
(assert (= (strLen lit$36$Tutorial_04_Polymorphism) 24))
(assert (= (strLen lit$36$learn$45$lh$45$0.1.0.0$45$1Du4197TG85LOPw555A0RD) 39))
(assert (= (strLen lit$36$src$47$Tutorial_04_Polymorphism.hs) 31))
(assert (= (strLen lit$36$haskell) 7))
(push 1)
(define-fun b$36$$35$$35$128 () Bool (and (= (apply$35$$35$2 (as head Int) lq_anf$36$$35$$35$7205759403792805099$35$$35$d2Zt) lq_anf$36$$35$$35$7205759403792805094$35$$35$d2Zo) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805099$35$$35$d2Zt) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805099$35$$35$d2Zt) lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805099$35$$35$d2Zt) 0)))
(define-fun b$36$$35$$35$160 () Bool (= lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM lit$36$learn$45$lh$45$0.1.0.0$45$1Du4197TG85LOPw555A0RD))
(define-fun b$36$$35$$35$224 () Bool (= lq_anf$36$$35$$35$7205759403792805154$35$$35$d30m 0))
(define-fun b$36$$35$$35$256 () Bool (= lq_anf$36$$35$$35$7205759403792805171$35$$35$d30D lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C))
(define-fun b$36$$35$$35$320 () Bool (and (= VV$35$$35$F$35$$35$65 lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv) (= VV$35$$35$F$35$$35$65 lq_anf$36$$35$$35$7205759403792805100$35$$35$d2Zu)))
(define-fun b$36$$35$$35$129 () Bool (and (= (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs) 2) (<= 0 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(define-fun b$36$$35$$35$161 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN) (strLen lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN) 0) (= lq_anf$36$$35$$35$7205759403792805119$35$$35$d2ZN lq_anf$36$$35$$35$7205759403792805118$35$$35$d2ZM)))
(define-fun b$36$$35$$35$225 () Bool (= lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n lq_anf$36$$35$$35$7205759403792805154$35$$35$d30m))
(define-fun b$36$$35$$35$130 () Bool (and (> (apply$35$$35$0 (as vlen Int) vs$35$$35$a2sj) 0) (<= 0 (apply$35$$35$0 (as vlen Int) vs$35$$35$a2sj))))
(define-fun b$36$$35$$35$162 () Bool (= lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO lit$36$Tutorial_04_Polymorphism))
(define-fun b$36$$35$$35$194 () Bool (and (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 (and (< i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805138$35$$35$d306) (<= i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805139$35$$35$d307))) (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 lq_anf$36$$35$$35$7205759403792805140$35$$35$d308)))
(define-fun b$36$$35$$35$226 () Bool (= lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o (< lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n n$35$$35$a2sA)))
(define-fun b$36$$35$$35$322 () Bool (and (= VV$35$$35$F$35$$35$66 lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv) (= VV$35$$35$F$35$$35$66 lq_anf$36$$35$$35$7205759403792805100$35$$35$d2Zu)))
(define-fun b$36$$35$$35$131 () Bool (= lq_anf$36$$35$$35$7205759403792805100$35$$35$d2Zu 0))
(define-fun b$36$$35$$35$163 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP) (strLen lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP) 0) (= lq_anf$36$$35$$35$7205759403792805121$35$$35$d2ZP lq_anf$36$$35$$35$7205759403792805120$35$$35$d2ZO)))
(define-fun b$36$$35$$35$195 () Bool (and lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 (and (< i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805138$35$$35$d306) (<= i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805139$35$$35$d307))) (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 lq_anf$36$$35$$35$7205759403792805140$35$$35$d308)))
(define-fun b$36$$35$$35$227 () Bool (and (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p (< lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n n$35$$35$a2sA)) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o)))
(define-fun b$36$$35$$35$323 () Bool (and (= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805171$35$$35$d30D) (= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C)))
(define-fun b$36$$35$$35$132 () Bool (= lq_anf$36$$35$$35$7205759403792805101$35$$35$d2Zv lq_anf$36$$35$$35$7205759403792805100$35$$35$d2Zu))
(define-fun b$36$$35$$35$164 () Bool (= lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ lit$36$src$47$Tutorial_04_Polymorphism.hs))
(define-fun b$36$$35$$35$228 () Bool (and (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p (< lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n n$35$$35$a2sA)) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o)))
(define-fun b$36$$35$$35$324 () Bool (and (= VV$35$$35$F$35$$35$4 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B) (= VV$35$$35$F$35$$35$4 lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A)))
(define-fun b$36$$35$$35$165 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR) (strLen lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR) 0) (= lq_anf$36$$35$$35$7205759403792805123$35$$35$d2ZR lq_anf$36$$35$$35$7205759403792805122$35$$35$d2ZQ)))
(define-fun b$36$$35$$35$229 () Bool (and (not lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p (< lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n n$35$$35$a2sA)) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o)))
(define-fun b$36$$35$$35$325 () Bool (and (= VV$35$$35$F$35$$35$36 i$35$$35$a2st) (>= VV$35$$35$F$35$$35$36 0)))
(define-fun b$36$$35$$35$134 () Bool (<= 0 (apply$35$$35$0 (as vlen Int) v$35$$35$a2sk)))
(define-fun b$36$$35$$35$166 () Bool (= lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS 51))
(define-fun b$36$$35$$35$198 () Bool (>= i$35$$35$a2sq 0))
(define-fun b$36$$35$$35$230 () Bool (= lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q 0))
(define-fun b$36$$35$$35$326 () Bool (and (= (apply$35$$35$0 (as vlen Int) VV$35$$35$F$35$$35$68) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805099$35$$35$d2Zt)) (<= 0 (apply$35$$35$0 (as vlen Int) VV$35$$35$F$35$$35$68))))
(define-fun b$36$$35$$35$39 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$135 () Bool (and (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw (apply$35$$35$0 (as vlen Int) v$35$$35$a2sk)) (>= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw 0)))
(define-fun b$36$$35$$35$167 () Bool (= lq_anf$36$$35$$35$7205759403792805125$35$$35$d2ZT lq_anf$36$$35$$35$7205759403792805124$35$$35$d2ZS))
(define-fun b$36$$35$$35$199 () Bool (and (< i$35$$35$a2sq (apply$35$$35$0 (as vlen Int) v$35$$35$a2sr)) (<= 0 (apply$35$$35$0 (as vlen Int) v$35$$35$a2sr))))
(define-fun b$36$$35$$35$231 () Bool (= lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r lq_anf$36$$35$$35$7205759403792805158$35$$35$d30q))
(define-fun b$36$$35$$35$136 () Bool (= lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx 0))
(define-fun b$36$$35$$35$168 () Bool (= lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU 21))
(define-fun b$36$$35$$35$232 () Bool (and (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p (< lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n n$35$$35$a2sA)) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o)))
(define-fun b$36$$35$$35$328 () Bool (and (= VV$35$$35$F$35$$35$37 i$35$$35$a2st) (>= VV$35$$35$F$35$$35$37 0)))
(define-fun b$36$$35$$35$41 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$137 () Bool (= lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy lq_anf$36$$35$$35$7205759403792805103$35$$35$d2Zx))
(define-fun b$36$$35$$35$169 () Bool (= lq_anf$36$$35$$35$7205759403792805127$35$$35$d2ZV lq_anf$36$$35$$35$7205759403792805126$35$$35$d2ZU))
(define-fun b$36$$35$$35$233 () Bool (and lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p (< lq_anf$36$$35$$35$7205759403792805155$35$$35$d30n n$35$$35$a2sA)) (= lq_anf$36$$35$$35$7205759403792805157$35$$35$d30p lq_anf$36$$35$$35$7205759403792805156$35$$35$d30o)))
(define-fun b$36$$35$$35$329 () Bool (and (= VV$35$$35$F$35$$35$6 lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z) (= VV$35$$35$F$35$$35$6 (+ i$35$$35$a2sF lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y))))
(define-fun b$36$$35$$35$170 () Bool (= lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW 51))
(define-fun b$36$$35$$35$202 () Bool (and (= sz$35$$35$a2sx (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (>= sz$35$$35$a2sx 0)))
(define-fun b$36$$35$$35$330 () Bool (and (= VV$35$$35$F$35$$35$7 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (= VV$35$$35$F$35$$35$7 (+ acc$35$$35$a2sE lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v))))
(define-fun b$36$$35$$35$139 () Bool (<= 0 (apply$35$$35$0 (as vlen Int) v$35$$35$a2sl)))
(define-fun b$36$$35$$35$171 () Bool (= lq_anf$36$$35$$35$7205759403792805129$35$$35$d2ZX lq_anf$36$$35$$35$7205759403792805128$35$$35$d2ZW))
(define-fun b$36$$35$$35$235 () Bool (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)))
(define-fun b$36$$35$$35$140 () Bool (and (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz (apply$35$$35$0 (as vlen Int) v$35$$35$a2sl)) (>= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz 0)))
(define-fun b$36$$35$$35$172 () Bool (= lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY 30))
(define-fun b$36$$35$$35$236 () Bool (and (= sz$35$$35$a2sD (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= sz$35$$35$a2sD 0)))
(define-fun b$36$$35$$35$141 () Bool (= lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA 0))
(define-fun b$36$$35$$35$173 () Bool (= lq_anf$36$$35$$35$7205759403792805131$35$$35$d2ZZ lq_anf$36$$35$$35$7205759403792805130$35$$35$d2ZY))
(define-fun b$36$$35$$35$142 () Bool (= lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB lq_anf$36$$35$$35$7205759403792805106$35$$35$d2ZA))
(define-fun b$36$$35$$35$206 () Bool (= lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b (< i$35$$35$a2sz sz$35$$35$a2sx)))
(define-fun b$36$$35$$35$207 () Bool (and (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c (< i$35$$35$a2sz sz$35$$35$a2sx)) (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b)))
(define-fun b$36$$35$$35$176 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) lq_anf$36$$35$$35$7205759403792805132$35$$35$d300) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792805133$35$$35$d301) lq_anf$36$$35$$35$7205759403792805132$35$$35$d300)))
(define-fun b$36$$35$$35$240 () Bool (= lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s (< i$35$$35$a2sF sz$35$$35$a2sD)))
(define-fun b$36$$35$$35$336 () Bool (= VV$35$$35$F$35$$35$15 n$35$$35$a2sA))
(define-fun b$36$$35$$35$145 () Bool (and (= lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm)) (>= lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC 0)))
(define-fun b$36$$35$$35$241 () Bool (and (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t (< i$35$$35$a2sF sz$35$$35$a2sD)) (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s)))
(define-fun b$36$$35$$35$337 () Bool (= VV$35$$35$F$35$$35$16 (- lq_anf$36$$35$$35$7205759403792805159$35$$35$d30r n$35$$35$a2sA)))
(define-fun b$36$$35$$35$146 () Bool (= lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD 0))
(define-fun b$36$$35$$35$178 () Bool (= lq_anf$36$$35$$35$7205759403792805135$35$$35$d303 lq_anf$36$$35$$35$7205759403792805134$35$$35$d302))
(define-fun b$36$$35$$35$210 () Bool (and (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c (< i$35$$35$a2sz sz$35$$35$a2sx)) (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b)))
(define-fun b$36$$35$$35$242 () Bool (and (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t (< i$35$$35$a2sF sz$35$$35$a2sD)) (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s)))
(define-fun b$36$$35$$35$338 () Bool (and (= VV$35$$35$F$35$$35$51 lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI) (= VV$35$$35$F$35$$35$51 lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH)))
(define-fun b$36$$35$$35$147 () Bool (= lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE lq_anf$36$$35$$35$7205759403792805109$35$$35$d2ZD))
(define-fun b$36$$35$$35$211 () Bool (and lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c (< i$35$$35$a2sz sz$35$$35$a2sx)) (= lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b)))
(define-fun b$36$$35$$35$243 () Bool (and (not lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t (< i$35$$35$a2sF sz$35$$35$a2sD)) (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s)))
(define-fun b$36$$35$$35$339 () Bool (and (= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805153$35$$35$d30l) (= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k)))
(define-fun b$36$$35$$35$148 () Bool (= lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF (= lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE)))
(define-fun b$36$$35$$35$244 () Bool (and (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t (< i$35$$35$a2sF sz$35$$35$a2sD)) (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s)))
(define-fun b$36$$35$$35$340 () Bool (and (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI) (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH)))
(define-fun b$36$$35$$35$149 () Bool (and (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG (= lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE)) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF)))
(define-fun b$36$$35$$35$213 () Bool (= lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e (+ acc$35$$35$a2sy lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d)))
(define-fun b$36$$35$$35$245 () Bool (and lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t (< i$35$$35$a2sF sz$35$$35$a2sD)) (= lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s)))
(define-fun b$36$$35$$35$341 () Bool (and (= VV$35$$35$F$35$$35$21 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j) (= VV$35$$35$F$35$$35$21 lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i)))
(define-fun b$36$$35$$35$150 () Bool (and (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG (= lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE)) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF)))
(define-fun b$36$$35$$35$214 () Bool (= lq_anf$36$$35$$35$7205759403792805147$35$$35$d30f 1))
(define-fun b$36$$35$$35$342 () Bool (and (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h) (= VV$35$$35$F$35$$35$23 (+ i$35$$35$a2sz lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g))))
(define-fun b$36$$35$$35$119 () Bool (= lq_anf$36$$35$$35$7205759403792805093$35$$35$d2Zn lit$36$haskell))
(define-fun b$36$$35$$35$151 () Bool (and (not lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG (= lq_anf$36$$35$$35$7205759403792805108$35$$35$d2ZC lq_anf$36$$35$$35$7205759403792805110$35$$35$d2ZE)) (= lq_anf$36$$35$$35$7205759403792805112$35$$35$d2ZG lq_anf$36$$35$$35$7205759403792805111$35$$35$d2ZF)))
(define-fun b$36$$35$$35$215 () Bool (= lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g lq_anf$36$$35$$35$7205759403792805147$35$$35$d30f))
(define-fun b$36$$35$$35$247 () Bool (>= lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v 0))
(define-fun b$36$$35$$35$343 () Bool (and (= VV$35$$35$F$35$$35$24 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e) (= VV$35$$35$F$35$$35$24 (+ acc$35$$35$a2sy lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d))))
(define-fun b$36$$35$$35$120 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805094$35$$35$d2Zo) (strLen lq_anf$36$$35$$35$7205759403792805093$35$$35$d2Zn)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805094$35$$35$d2Zo) 0) (= lq_anf$36$$35$$35$7205759403792805094$35$$35$d2Zo lq_anf$36$$35$$35$7205759403792805093$35$$35$d2Zn)))
(define-fun b$36$$35$$35$152 () Bool (= lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH 0))
(define-fun b$36$$35$$35$216 () Bool (= lq_anf$36$$35$$35$7205759403792805149$35$$35$d30h (+ i$35$$35$a2sz lq_anf$36$$35$$35$7205759403792805148$35$$35$d30g)))
(define-fun b$36$$35$$35$248 () Bool (= lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w (+ acc$35$$35$a2sE lq_anf$36$$35$$35$7205759403792805163$35$$35$d30v)))
(define-fun b$36$$35$$35$121 () Bool (= lq_anf$36$$35$$35$7205759403792805095$35$$35$d2Zp lit$36$javascript))
(define-fun b$36$$35$$35$153 () Bool (= lq_anf$36$$35$$35$7205759403792805114$35$$35$d2ZI lq_anf$36$$35$$35$7205759403792805113$35$$35$d2ZH))
(define-fun b$36$$35$$35$185 () Bool (<= 0 (apply$35$$35$0 (as vlen Int) x$35$$35$a2ss)))
(define-fun b$36$$35$$35$217 () Bool (= go$35$$35$a2sw go$35$$35$a2uO))
(define-fun b$36$$35$$35$249 () Bool (= lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x 1))
(define-fun b$36$$35$$35$345 () Bool (= VV$35$$35$F$35$$35$57 (= lq_anf$36$$35$$35$7205759403792805105$35$$35$d2Zz lq_anf$36$$35$$35$7205759403792805107$35$$35$d2ZB)))
(define-fun b$36$$35$$35$122 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805096$35$$35$d2Zq) (strLen lq_anf$36$$35$$35$7205759403792805095$35$$35$d2Zp)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805096$35$$35$d2Zq) 0) (= lq_anf$36$$35$$35$7205759403792805096$35$$35$d2Zq lq_anf$36$$35$$35$7205759403792805095$35$$35$d2Zp)))
(define-fun b$36$$35$$35$186 () Bool (>= i$35$$35$a2st 0))
(define-fun b$36$$35$$35$218 () Bool (= lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i 0))
(define-fun b$36$$35$$35$250 () Bool (= lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y lq_anf$36$$35$$35$7205759403792805165$35$$35$d30x))
(define-fun b$36$$35$$35$187 () Bool (= lq_anf$36$$35$$35$7205759403792805137$35$$35$d305 0))
(define-fun b$36$$35$$35$219 () Bool (= lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j lq_anf$36$$35$$35$7205759403792805150$35$$35$d30i))
(define-fun b$36$$35$$35$251 () Bool (= lq_anf$36$$35$$35$7205759403792805167$35$$35$d30z (+ i$35$$35$a2sF lq_anf$36$$35$$35$7205759403792805166$35$$35$d30y)))
(define-fun b$36$$35$$35$124 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805097$35$$35$d2Zr) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805097$35$$35$d2Zr) 0)))
(define-fun b$36$$35$$35$188 () Bool (= lq_anf$36$$35$$35$7205759403792805138$35$$35$d306 lq_anf$36$$35$$35$7205759403792805137$35$$35$d305))
(define-fun b$36$$35$$35$220 () Bool (= lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k 0))
(define-fun b$36$$35$$35$252 () Bool (= go$35$$35$a2sC go$35$$35$a2u7))
(define-fun b$36$$35$$35$348 () Bool (= VV$35$$35$F$35$$35$61 (not (= lq_anf$36$$35$$35$7205759403792805102$35$$35$d2Zw lq_anf$36$$35$$35$7205759403792805104$35$$35$d2Zy))))
(define-fun b$36$$35$$35$189 () Bool (and (= lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 (apply$35$$35$0 (as vlen Int) x$35$$35$a2ss)) (>= lq_anf$36$$35$$35$7205759403792805139$35$$35$d307 0)))
(define-fun b$36$$35$$35$221 () Bool (= lq_anf$36$$35$$35$7205759403792805153$35$$35$d30l lq_anf$36$$35$$35$7205759403792805152$35$$35$d30k))
(define-fun b$36$$35$$35$253 () Bool (= lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A 0))
(define-fun b$36$$35$$35$126 () Bool (and (= (apply$35$$35$2 (as head Int) lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs) lq_anf$36$$35$$35$7205759403792805096$35$$35$d2Zq) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805097$35$$35$d2Zr))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs) lq_anf$36$$35$$35$7205759403792805097$35$$35$d2Zr) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805098$35$$35$d2Zs) 0)))
(define-fun b$36$$35$$35$158 () Bool (= lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK lit$36$undefined))
(define-fun b$36$$35$$35$190 () Bool (= lq_anf$36$$35$$35$7205759403792805140$35$$35$d308 (and (< i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805138$35$$35$d306) (<= i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805139$35$$35$d307))))
(define-fun b$36$$35$$35$254 () Bool (= lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B lq_anf$36$$35$$35$7205759403792805168$35$$35$d30A))
(define-fun b$36$$35$$35$318 () Bool (and (= VV$35$$35$F$35$$35$32 i$35$$35$a2sq) (>= VV$35$$35$F$35$$35$32 0)))
(define-fun b$36$$35$$35$159 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL) (strLen lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL) 0) (= lq_anf$36$$35$$35$7205759403792805117$35$$35$d2ZL lq_anf$36$$35$$35$7205759403792805116$35$$35$d2ZK)))
(define-fun b$36$$35$$35$191 () Bool (and (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 (and (< i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805138$35$$35$d306) (<= i$35$$35$a2st lq_anf$36$$35$$35$7205759403792805139$35$$35$d307))) (= lq_anf$36$$35$$35$7205759403792805141$35$$35$d309 lq_anf$36$$35$$35$7205759403792805140$35$$35$d308)))
(define-fun b$36$$35$$35$255 () Bool (= lq_anf$36$$35$$35$7205759403792805170$35$$35$d30C 0))
(define-fun b$36$$35$$35$319 () Bool (and (= VV$35$$35$F$35$$35$33 i$35$$35$a2sq) (>= VV$35$$35$F$35$$35$33 0)))
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$129 b$36$$35$$35$324 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$252 b$36$$35$$35$253 b$36$$35$$35$254 b$36$$35$$35$255))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$4 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$4 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$4 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$4 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$4 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$4 sz$35$$35$a2sD))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$4 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$4 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$4 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$4 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$4 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$4 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$4 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$4 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$4 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$129 b$36$$35$$35$323 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$252 b$36$$35$$35$253 b$36$$35$$35$254 b$36$$35$$35$255))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 sz$35$$35$a2sD))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= acc$35$$35$a2sE (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= acc$35$$35$a2sE 0) (>= acc$35$$35$a2sE 0) (< acc$35$$35$a2sE (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= acc$35$$35$a2sE 0) (<= acc$35$$35$a2sE (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= acc$35$$35$a2sE sz$35$$35$a2sD) (= i$35$$35$a2sF 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (= i$35$$35$a2sF acc$35$$35$a2sE) (>= i$35$$35$a2sF acc$35$$35$a2sE) (< i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= i$35$$35$a2sF acc$35$$35$a2sE) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= i$35$$35$a2sF acc$35$$35$a2sE) (<= i$35$$35$a2sF 0) (>= i$35$$35$a2sF 0) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$330 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$7 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$7 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$7 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$7 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$7 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$7 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$7 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (= i$35$$35$a2sF 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (= i$35$$35$a2sF acc$35$$35$a2sE) (>= i$35$$35$a2sF acc$35$$35$a2sE) (< i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= i$35$$35$a2sF acc$35$$35$a2sE) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= i$35$$35$a2sF acc$35$$35$a2sE) (<= i$35$$35$a2sF 0) (>= i$35$$35$a2sF 0) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$329 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$6 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$6 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$6 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$6 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$6 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (>= i$35$$35$a2sF 0) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (< i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sF sz$35$$35$a2sD) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$330 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$7 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (>= i$35$$35$a2sF 0) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (< i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sF sz$35$$35$a2sD) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$329 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$6 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= i$35$$35$a2sF 0) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$330 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$7 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= i$35$$35$a2sF 0) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$329 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$6 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (>= i$35$$35$a2sF 0) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= i$35$$35$a2sF sz$35$$35$a2sD) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$330 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$7 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (>= i$35$$35$a2sF 0) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (<= i$35$$35$a2sF sz$35$$35$a2sD) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$329 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$6 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$6 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= i$35$$35$a2sF 0) (>= VV$35$$35$F$35$$35$11 0)) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 (= VV$35$$35$F$35$$35$11 acc$35$$35$a2sE) b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243))
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 sz$35$$35$a2sD))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 i$35$$35$a2sF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 i$35$$35$a2sF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 i$35$$35$a2sF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 i$35$$35$a2sF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 acc$35$$35$a2sE))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 i$35$$35$a2sF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 i$35$$35$a2sF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 i$35$$35$a2sF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 sz$35$$35$a2sD)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (>= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (<= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (>= VV$35$$35$F$35$$35$5 0) (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= i$35$$35$a2sF 0) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$5 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$5 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$5 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$5 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$5 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= VV$35$$35$F$35$$35$5 0) (>= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792805164$35$$35$d30w) (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= i$35$$35$a2sF 0) (exists ((lq_tmp$36$x$35$$35$1661 Int) (lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 Int) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 Bool) (lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 Int) (lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 Int) (lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 Int) (lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 Bool)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB) (= lq_tmp$36$x$35$$35$1661 lq_anf$36$$35$$35$7205759403792805162$35$$35$d30u) (exists ((VV$35$$35$F$35$$35$10 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1660 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1659$35$$35$k_$35$$35$1660 VV$35$$35$F$35$$35$10) (= lq_karg$36$acc$35$$35$a2sE$35$$35$k_$35$$35$1660 acc$35$$35$a2sE) (= lq_karg$36$i$35$$35$a2sF$35$$35$k_$35$$35$1660 i$35$$35$a2sF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805160$35$$35$d30s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t$35$$35$k_$35$$35$1660 lq_anf$36$$35$$35$7205759403792805161$35$$35$d30t) (= lq_karg$36$sz$35$$35$a2sD$35$$35$k_$35$$35$1660 sz$35$$35$a2sD) (= lq_karg$36$vec$35$$35$a2sB$35$$35$k_$35$$35$1660 vec$35$$35$a2sB)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$5 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$5 acc$35$$35$a2sE)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (<= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (= 0 1) (< (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) b$36$$35$$35$202 b$36$$35$$35$339 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$20 sz$35$$35$a2sx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$20 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$20 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$20 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$20 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$20 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$20 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$20 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$20 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$20 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792805151$35$$35$d30j)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$20 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$20 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (<= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (= 0 1) (< (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) b$36$$35$$35$202 b$36$$35$$35$341 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$21 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$21 sz$35$$35$a2sx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$21 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$21 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$21 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$21 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$21 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$21 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$21 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$21 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$21 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$21 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (<= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (= 0 1) (< (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> acc$35$$35$a2sy sz$35$$35$a2sx) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (< acc$35$$35$a2sy 0) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= 0 1) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= acc$35$$35$a2sy sz$35$$35$a2sx) (<= acc$35$$35$a2sy 0) (>= acc$35$$35$a2sy 0) (<= acc$35$$35$a2sy sz$35$$35$a2sx) (> acc$35$$35$a2sy 0) (>= acc$35$$35$a2sy sz$35$$35$a2sx) (= acc$35$$35$a2sy sz$35$$35$a2sx) (= acc$35$$35$a2sy 0) (= acc$35$$35$a2sy 1) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (not (= acc$35$$35$a2sy 0)) (not (= acc$35$$35$a2sy sz$35$$35$a2sx)) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< acc$35$$35$a2sy sz$35$$35$a2sx) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< i$35$$35$a2sz sz$35$$35$a2sx) (< i$35$$35$a2sz 0) (= i$35$$35$a2sz acc$35$$35$a2sy) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= 0 1) (<= i$35$$35$a2sz acc$35$$35$a2sy) (>= i$35$$35$a2sz sz$35$$35$a2sx) (<= i$35$$35$a2sz 0) (> i$35$$35$a2sz acc$35$$35$a2sy) (>= i$35$$35$a2sz 0) (> i$35$$35$a2sz 0) (>= i$35$$35$a2sz acc$35$$35$a2sy) (= i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz 0) (= i$35$$35$a2sz 1) (<= i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz acc$35$$35$a2sy) (not (= i$35$$35$a2sz acc$35$$35$a2sy)) (< i$35$$35$a2sz acc$35$$35$a2sy) (not (= i$35$$35$a2sz 0)) (= i$35$$35$a2sz sz$35$$35$a2sx) (> i$35$$35$a2sz sz$35$$35$a2sx) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (not (= i$35$$35$a2sz sz$35$$35$a2sx)) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 Bool) (lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 Int) (lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 Int) (lq_tmp$36$x$35$$35$1437 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 Bool) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 Int) (lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 Int) (lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 Int) (lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d) (= lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 acc$35$$35$a2sy) (= lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 i$35$$35$a2sz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c) (= lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 sz$35$$35$a2sx) (= lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 vec$35$$35$a2sv) (= lq_tmp$36$x$35$$35$1437 lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d) (exists ((VV$35$$35$F$35$$35$27 Int)) (and (not (= VV$35$$35$F$35$$35$27 0)) (= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= VV$35$$35$F$35$$35$27 1) (= VV$35$$35$F$35$$35$27 0) (> VV$35$$35$F$35$$35$27 0) (< VV$35$$35$F$35$$35$27 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= VV$35$$35$F$35$$35$27 0) (<= VV$35$$35$F$35$$35$27 0) (= 0 1) (< VV$35$$35$F$35$$35$27 0) (<= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 VV$35$$35$F$35$$35$27) (= lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 acc$35$$35$a2sy) (= lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 i$35$$35$a2sz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c) (= lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 sz$35$$35$a2sx) (= lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 vec$35$$35$a2sv)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) b$36$$35$$35$202 b$36$$35$$35$206 b$36$$35$$35$207 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$213 b$36$$35$$35$214 b$36$$35$$35$342 b$36$$35$$35$215 b$36$$35$$35$216))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792805146$35$$35$d30e)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 sz$35$$35$a2sx))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (<= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (= 0 1) (< (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> acc$35$$35$a2sy sz$35$$35$a2sx) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (< acc$35$$35$a2sy 0) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= 0 1) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= acc$35$$35$a2sy sz$35$$35$a2sx) (<= acc$35$$35$a2sy 0) (>= acc$35$$35$a2sy 0) (<= acc$35$$35$a2sy sz$35$$35$a2sx) (> acc$35$$35$a2sy 0) (>= acc$35$$35$a2sy sz$35$$35$a2sx) (= acc$35$$35$a2sy sz$35$$35$a2sx) (= acc$35$$35$a2sy 0) (= acc$35$$35$a2sy 1) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (not (= acc$35$$35$a2sy 0)) (not (= acc$35$$35$a2sy sz$35$$35$a2sx)) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< acc$35$$35$a2sy sz$35$$35$a2sx) (not (= i$35$$35$a2sz sz$35$$35$a2sx)) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz sz$35$$35$a2sx) (not (= i$35$$35$a2sz 0)) (< i$35$$35$a2sz acc$35$$35$a2sy) (not (= i$35$$35$a2sz acc$35$$35$a2sy)) (= i$35$$35$a2sz acc$35$$35$a2sy) (<= i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz 1) (= i$35$$35$a2sz 0) (= i$35$$35$a2sz sz$35$$35$a2sx) (>= i$35$$35$a2sz acc$35$$35$a2sy) (> i$35$$35$a2sz 0) (>= i$35$$35$a2sz 0) (> i$35$$35$a2sz acc$35$$35$a2sy) (<= i$35$$35$a2sz 0) (>= i$35$$35$a2sz sz$35$$35$a2sx) (<= i$35$$35$a2sz acc$35$$35$a2sy) (= 0 1) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= i$35$$35$a2sz acc$35$$35$a2sy) (< i$35$$35$a2sz 0) (< i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 Bool) (lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 Int) (lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 Int) (lq_tmp$36$x$35$$35$1437 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 Bool) (lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 Int) (lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 Int) (lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 Int) (lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 Int)) (and (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d) (= lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 acc$35$$35$a2sy) (= lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 i$35$$35$a2sz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c) (= lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 sz$35$$35$a2sx) (= lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 vec$35$$35$a2sv) (= lq_tmp$36$x$35$$35$1437 lq_anf$36$$35$$35$7205759403792805145$35$$35$d30d) (exists ((VV$35$$35$F$35$$35$27 Int)) (and (not (= VV$35$$35$F$35$$35$27 0)) (= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= VV$35$$35$F$35$$35$27 1) (= VV$35$$35$F$35$$35$27 0) (> VV$35$$35$F$35$$35$27 0) (< VV$35$$35$F$35$$35$27 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= VV$35$$35$F$35$$35$27 0) (<= VV$35$$35$F$35$$35$27 0) (= 0 1) (< VV$35$$35$F$35$$35$27 0) (<= VV$35$$35$F$35$$35$27 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= lq_karg$36$Tutorial_04_Polymorphism.twoLangs$35$$35$k_$35$$35$1436 Tutorial_04_Polymorphism.twoLangs) (= lq_karg$36$VV$35$$35$1435$35$$35$k_$35$$35$1436 VV$35$$35$F$35$$35$27) (= lq_karg$36$acc$35$$35$a2sy$35$$35$k_$35$$35$1436 acc$35$$35$a2sy) (= lq_karg$36$i$35$$35$a2sz$35$$35$k_$35$$35$1436 i$35$$35$a2sz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805143$35$$35$d30b) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c$35$$35$k_$35$$35$1436 lq_anf$36$$35$$35$7205759403792805144$35$$35$d30c) (= lq_karg$36$sz$35$$35$a2sx$35$$35$k_$35$$35$1436 sz$35$$35$a2sx) (= lq_karg$36$vec$35$$35$a2sv$35$$35$k_$35$$35$1436 vec$35$$35$a2sv)))))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) b$36$$35$$35$202 b$36$$35$$35$206 b$36$$35$$35$207 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$213 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$343 b$36$$35$$35$216))
(push 1)
(assert (not (> VV$35$$35$F$35$$35$24 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$24 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$24 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$24 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$24 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$24 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$24 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$24 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$24 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$24 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$24 sz$35$$35$a2sx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$24 sz$35$$35$a2sx)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$198 b$36$$35$$35$39 b$36$$35$$35$199 b$36$$35$$35$41 b$36$$35$$35$318))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$32 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$198 b$36$$35$$35$39 b$36$$35$$35$199 b$36$$35$$35$41 b$36$$35$$35$319))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$33 (apply$35$$35$0 (as vlen Int) v$35$$35$a2sr))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$129 b$36$$35$$35$130 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$39 b$36$$35$$35$41))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$65 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= VV$35$$35$F$35$$35$2 lq_anf$36$$35$$35$7205759403792805169$35$$35$d30B) (>= VV$35$$35$F$35$$35$2 0)) b$36$$35$$35$256 b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$252 b$36$$35$$35$253 b$36$$35$$35$254 b$36$$35$$35$255))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$2 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$130 b$36$$35$$35$322 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$39 b$36$$35$$35$41))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$66 (apply$35$$35$0 (as vlen Int) vs$35$$35$a2sj))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$194 b$36$$35$$35$195 b$36$$35$$35$325 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$36 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$128 b$36$$35$$35$326 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$119 b$36$$35$$35$120 b$36$$35$$35$121 b$36$$35$$35$122 b$36$$35$$35$124 b$36$$35$$35$126))
(push 1)
(assert (not (= (apply$35$$35$0 (as vlen Int) VV$35$$35$F$35$$35$68) 2)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$194 b$36$$35$$35$195 b$36$$35$$35$39 b$36$$35$$35$328 b$36$$35$$35$41 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$37 (apply$35$$35$0 (as vlen Int) x$35$$35$a2ss))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= VV$35$$35$F$35$$35$8 sz$35$$35$a2sD) (<= VV$35$$35$F$35$$35$8 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= VV$35$$35$F$35$$35$8 0) (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= i$35$$35$a2sF 0)) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 (= VV$35$$35$F$35$$35$8 i$35$$35$a2sF) b$36$$35$$35$236 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$8 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$160 b$36$$35$$35$129 b$36$$35$$35$161 b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$39 b$36$$35$$35$167 b$36$$35$$35$168 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$176 b$36$$35$$35$178 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 (and (< x$35$$35$a2sp hi$35$$35$a2sn) (<= x$35$$35$a2sp lo$35$$35$a2so)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= VV$35$$35$F$35$$35$9 sz$35$$35$a2sD) (<= VV$35$$35$F$35$$35$9 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= VV$35$$35$F$35$$35$9 0) (>= acc$35$$35$a2sE 0) (<= i$35$$35$a2sF sz$35$$35$a2sD) (<= i$35$$35$a2sF (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB)) (>= i$35$$35$a2sF 0)) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$235 b$36$$35$$35$236 (= VV$35$$35$F$35$$35$9 i$35$$35$a2sF) b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$244 b$36$$35$$35$245))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$9 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sB))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$129 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$227 b$36$$35$$35$39 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$233 b$36$$35$$35$336))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$15 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$129 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$227 b$36$$35$$35$228 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$39 b$36$$35$$35$231 b$36$$35$$35$41 b$36$$35$$35$337))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$16 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) 0) (< (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) 0) (= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) 0) (>= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= 0 1)) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm)) b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$338 b$36$$35$$35$147 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$150 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$51 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) 0) (< (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) 0) (= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) 0) (>= (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= 0 1)) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm)) b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$147 b$36$$35$$35$148 b$36$$35$$35$340 b$36$$35$$35$149 b$36$$35$$35$150 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 (apply$35$$35$0 (as vlen Int) x$35$$35$a2sm))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (<= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (= 0 1) (< (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< acc$35$$35$a2sy sz$35$$35$a2sx) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (not (= acc$35$$35$a2sy sz$35$$35$a2sx)) (not (= acc$35$$35$a2sy 0)) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= acc$35$$35$a2sy 1) (= acc$35$$35$a2sy 0) (= acc$35$$35$a2sy sz$35$$35$a2sx) (>= acc$35$$35$a2sy sz$35$$35$a2sx) (> acc$35$$35$a2sy 0) (<= acc$35$$35$a2sy sz$35$$35$a2sx) (>= acc$35$$35$a2sy 0) (<= acc$35$$35$a2sy 0) (= acc$35$$35$a2sy sz$35$$35$a2sx) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= 0 1) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (< acc$35$$35$a2sy 0) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> acc$35$$35$a2sy sz$35$$35$a2sx) (not (= i$35$$35$a2sz sz$35$$35$a2sx)) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz sz$35$$35$a2sx) (not (= i$35$$35$a2sz 0)) (< i$35$$35$a2sz acc$35$$35$a2sy) (not (= i$35$$35$a2sz acc$35$$35$a2sy)) (= i$35$$35$a2sz acc$35$$35$a2sy) (<= i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz 1) (= i$35$$35$a2sz 0) (= i$35$$35$a2sz sz$35$$35$a2sx) (>= i$35$$35$a2sz acc$35$$35$a2sy) (> i$35$$35$a2sz 0) (>= i$35$$35$a2sz 0) (> i$35$$35$a2sz acc$35$$35$a2sy) (<= i$35$$35$a2sz 0) (>= i$35$$35$a2sz sz$35$$35$a2sx) (<= i$35$$35$a2sz acc$35$$35$a2sy) (= 0 1) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= i$35$$35$a2sz acc$35$$35$a2sy) (< i$35$$35$a2sz 0) (< i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (not (= VV$35$$35$F$35$$35$25 sz$35$$35$a2sx)) (< VV$35$$35$F$35$$35$25 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (<= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> VV$35$$35$F$35$$35$25 sz$35$$35$a2sx) (= VV$35$$35$F$35$$35$25 sz$35$$35$a2sx) (not (= VV$35$$35$F$35$$35$25 0)) (< VV$35$$35$F$35$$35$25 acc$35$$35$a2sy) (not (= VV$35$$35$F$35$$35$25 acc$35$$35$a2sy)) (= VV$35$$35$F$35$$35$25 acc$35$$35$a2sy) (<= VV$35$$35$F$35$$35$25 sz$35$$35$a2sx) (= VV$35$$35$F$35$$35$25 1) (= VV$35$$35$F$35$$35$25 0) (= VV$35$$35$F$35$$35$25 sz$35$$35$a2sx) (>= VV$35$$35$F$35$$35$25 acc$35$$35$a2sy) (> VV$35$$35$F$35$$35$25 0) (>= VV$35$$35$F$35$$35$25 0) (> VV$35$$35$F$35$$35$25 acc$35$$35$a2sy) (<= VV$35$$35$F$35$$35$25 0) (>= VV$35$$35$F$35$$35$25 sz$35$$35$a2sx) (<= VV$35$$35$F$35$$35$25 acc$35$$35$a2sy) (= 0 1) (< VV$35$$35$F$35$$35$25 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= VV$35$$35$F$35$$35$25 acc$35$$35$a2sy) (< VV$35$$35$F$35$$35$25 0) (< VV$35$$35$F$35$$35$25 sz$35$$35$a2sx) (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= VV$35$$35$F$35$$35$25 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) b$36$$35$$35$202 b$36$$35$$35$206 b$36$$35$$35$207 b$36$$35$$35$210 b$36$$35$$35$211 (= VV$35$$35$F$35$$35$25 i$35$$35$a2sz)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$25 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 b$36$$35$$35$139 b$36$$35$$35$140 b$36$$35$$35$141 b$36$$35$$35$142 b$36$$35$$35$345))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$57 (= (apply$35$$35$0 (as vlen Int) v$35$$35$a2sl) 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (<= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (> (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) 0) (= 0 1) (< (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (>= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv) (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (< acc$35$$35$a2sy sz$35$$35$a2sx) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (not (= acc$35$$35$a2sy sz$35$$35$a2sx)) (not (= acc$35$$35$a2sy 0)) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= acc$35$$35$a2sy 1) (= acc$35$$35$a2sy 0) (= acc$35$$35$a2sy sz$35$$35$a2sx) (>= acc$35$$35$a2sy sz$35$$35$a2sx) (> acc$35$$35$a2sy 0) (<= acc$35$$35$a2sy sz$35$$35$a2sx) (>= acc$35$$35$a2sy 0) (<= acc$35$$35$a2sy 0) (= acc$35$$35$a2sy sz$35$$35$a2sx) (<= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= 0 1) (= acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (< acc$35$$35$a2sy 0) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (< acc$35$$35$a2sy (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> acc$35$$35$a2sy sz$35$$35$a2sx) (not (= i$35$$35$a2sz sz$35$$35$a2sx)) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz sz$35$$35$a2sx) (not (= i$35$$35$a2sz 0)) (< i$35$$35$a2sz acc$35$$35$a2sy) (not (= i$35$$35$a2sz acc$35$$35$a2sy)) (= i$35$$35$a2sz acc$35$$35$a2sy) (<= i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz 1) (= i$35$$35$a2sz 0) (= i$35$$35$a2sz sz$35$$35$a2sx) (>= i$35$$35$a2sz acc$35$$35$a2sy) (> i$35$$35$a2sz 0) (>= i$35$$35$a2sz 0) (> i$35$$35$a2sz acc$35$$35$a2sy) (<= i$35$$35$a2sz 0) (>= i$35$$35$a2sz sz$35$$35$a2sx) (<= i$35$$35$a2sz acc$35$$35$a2sy) (= 0 1) (< i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= i$35$$35$a2sz acc$35$$35$a2sy) (< i$35$$35$a2sz 0) (< i$35$$35$a2sz sz$35$$35$a2sx) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= i$35$$35$a2sz (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (not (= VV$35$$35$F$35$$35$26 sz$35$$35$a2sx)) (< VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (<= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (> VV$35$$35$F$35$$35$26 sz$35$$35$a2sx) (= VV$35$$35$F$35$$35$26 sz$35$$35$a2sx) (not (= VV$35$$35$F$35$$35$26 0)) (< VV$35$$35$F$35$$35$26 acc$35$$35$a2sy) (not (= VV$35$$35$F$35$$35$26 acc$35$$35$a2sy)) (= VV$35$$35$F$35$$35$26 acc$35$$35$a2sy) (<= VV$35$$35$F$35$$35$26 sz$35$$35$a2sx) (= VV$35$$35$F$35$$35$26 1) (= VV$35$$35$F$35$$35$26 0) (= VV$35$$35$F$35$$35$26 sz$35$$35$a2sx) (>= VV$35$$35$F$35$$35$26 acc$35$$35$a2sy) (> VV$35$$35$F$35$$35$26 0) (>= VV$35$$35$F$35$$35$26 0) (> VV$35$$35$F$35$$35$26 acc$35$$35$a2sy) (<= VV$35$$35$F$35$$35$26 0) (>= VV$35$$35$F$35$$35$26 sz$35$$35$a2sx) (<= VV$35$$35$F$35$$35$26 acc$35$$35$a2sy) (= 0 1) (< VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (= VV$35$$35$F$35$$35$26 acc$35$$35$a2sy) (< VV$35$$35$F$35$$35$26 0) (< VV$35$$35$F$35$$35$26 sz$35$$35$a2sx) (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) Tutorial_04_Polymorphism.twoLangs)) (<= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))) b$36$$35$$35$129 b$36$$35$$35$39 b$36$$35$$35$41 (<= 0 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv)) b$36$$35$$35$202 b$36$$35$$35$206 b$36$$35$$35$207 b$36$$35$$35$210 b$36$$35$$35$211 (= VV$35$$35$F$35$$35$26 i$35$$35$a2sz)))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as vlen Int) vec$35$$35$a2sv))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$129 b$36$$35$$35$134 b$36$$35$$35$39 b$36$$35$$35$135 b$36$$35$$35$136 b$36$$35$$35$41 b$36$$35$$35$137 b$36$$35$$35$348))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$61 (> (apply$35$$35$0 (as vlen Int) v$35$$35$a2sk) 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
